{"version":3,"file":"static/js/495.27b6c7eb.chunk.js","mappings":"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","sources":["pages/Home.jsx","../node_modules/react-simple-typewriter/src/reducer.ts","../node_modules/react-simple-typewriter/src/hooks/useTypewriter.tsx","../node_modules/react-simple-typewriter/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-typewriter/src/components/Cursor.tsx","../node_modules/react-simple-typewriter/src/components/Typewriter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typewriter } from \"react-simple-typewriter\";\nimport Homeani from \"../animation/person.json\";\nimport Lottie from \"react-lottie\";\n\nexport default function Home({ contactRef }) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const scrollToContact = () => {\n    if (contactRef && contactRef.current) {\n      contactRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: Homeani,\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const data = [\n    \"Socheang Dev\",\n    \"Web Developer\",\n    \"Mobile App Developer\",\n    \"Rest API Developer\",\n  ];\n  const Desktop = () => {\n    return (\n      <section className=\"w-[100%] h-[100vh] bg-bgcolor flex flex-col justify-center items-center\">\n        <div className=\"w-[100%] h-[100%] flex justify-center \">\n          <div className=\"flex flex-row  justify-around items-center  w-[80%] max-w-[1300px]\">\n            <div className=\"w-[50%] flex justify-center flex-col gap-10\">\n              <h1 className=\" text-white font-bold text-3xl\">\n                I'm\n                <span className=\"pl-2 text-activecol\">\n                  <Typewriter\n                    words={data}\n                    loop={true}\n                    cursor\n                    cursorStyle=\"_\"\n                    typeSpeed={70}\n                    deleteSpeed={25}\n                    delaySpeed={1000}\n                  />\n                </span>\n              </h1>\n              <button\n                onClick={scrollToContact}\n                className=\"w-56 uppercase h-10 rounded-[3px] border-[1px] hover:border-none border-white text-white font-bold transform transition-all duration-300 hover:bg-activecol hover:scale-105 hover:animate-pulse\"\n              >\n                Hire Me\n              </button>\n            </div>\n            <div className=\"w-[50%] flex justify-center\">\n              <Lottie\n                options={defaultOptions}\n                style={{ width: 400, height: 400 }}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const Mobile = () => {\n    return (\n      <section className=\"w-[100%] h-[650px] bg-bgcolor flex justify-center\">\n        <div className=\"w-[80%] h-[100%] flex justify-center\">\n          <div className=\"flex flex-col pt-60 justify-around items-center gap-12 w-[100%] h-[300px]\">\n            <div className=\"w-[50%] flex justify-center\">\n              <Lottie\n                options={defaultOptions}\n                style={{ width: 200, height: 200 }}\n              />\n            </div>\n            <div className=\"w-[100%] flex justify-center\">\n              <h1 className=\" text-white font-bold text-[20px]\">\n                I'm\n                <span className=\"pl-2 text-activecol\">\n                  <Typewriter\n                    words={data}\n                    loop={true}\n                    cursor\n                    cursorStyle=\"_\"\n                    typeSpeed={70}\n                    deleteSpeed={50}\n                    delaySpeed={1000}\n                  />\n                </span>\n              </h1>\n            </div>\n            <div>\n              <button\n                onClick={scrollToContact}\n                className=\"w-[100px]  uppercase h-[24px] text-[12px] rounded-[3px] border-[1px] border-white text-white font-bold transform transition-all duration-300 hover:bg-activecol hover:scale-105\"\n              >\n                Hire Me\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  return windowWidth < 980 ? Mobile() : Desktop();\n}\n","export type State = {\r\n  speed: number\r\n  text: string\r\n  count: number\r\n}\r\n\r\nexport type Action =\r\n  | { type: 'DELAY'; payload: number }\r\n  | { type: 'TYPE'; payload: string; speed: number }\r\n  | { type: 'DELETE'; payload: string; speed: number }\r\n  | { type: 'COUNT' }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'TYPE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length + 1)\r\n      }\r\n    case 'DELAY':\r\n      return {\r\n        ...state,\r\n        speed: action.payload\r\n      }\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length - 1)\r\n      }\r\n    case 'COUNT':\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useCallback, useEffect, useRef, useReducer } from 'react'\r\nimport { reducer } from '../reducer'\r\n\r\nexport type TypewriterProps = {\r\n  /** Callback Function that is triggered when loops are completed. available if loop is > `0` */\r\n  onLoopDone?: () => void\r\n  /** Callback Function that is triggered while typing with `typed` words count passed */\r\n  onType?: (count: number) => void\r\n  /** Callback Function that is triggered while deleting */\r\n  onDelete?: () => void\r\n  /** Callback Function that is triggered on typing delay */\r\n  onDelay?: () => void\r\n  /** Array of strings holding the words */\r\n  words: string[]\r\n  /** Control how many times to run. `0 | false` to run infinitely */\r\n  loop?: number | boolean\r\n  /** Character typing speed in Milliseconds */\r\n  typeSpeed?: number\r\n  /** Character deleting speed in Milliseconds */\r\n  deleteSpeed?: number\r\n  /** Delay time between the words in Milliseconds */\r\n  delaySpeed?: number\r\n}\r\n\r\nexport type TypewriterHelper = {\r\n  /** `true` if currently typing */\r\n  isType: boolean\r\n  /** `true` if on delay */\r\n  isDelay: boolean\r\n  /** `true` if currently deleting */\r\n  isDelete: boolean\r\n  /** `true` if all loops are done */\r\n  isDone: boolean\r\n}\r\n\r\nexport const useTypewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  onLoopDone,\r\n  onType,\r\n  onDelete,\r\n  onDelay\r\n}: TypewriterProps): [string, TypewriterHelper] => {\r\n  const [{ speed, text, count }, dispatch] = useReducer(reducer, {\r\n    speed: typeSpeed,\r\n    text: '',\r\n    count: 0\r\n  })\r\n\r\n  // Refs\r\n  const loops = useRef(0)\r\n  const isDone = useRef(false)\r\n  const isDelete = useRef(false)\r\n  const isType = useRef(false)\r\n  const isDelay = useRef(false)\r\n\r\n  const handleTyping = useCallback(() => {\r\n    const index = count % words.length\r\n    const fullWord = words[index]\r\n\r\n    if (!isDelete.current) {\r\n      dispatch({ type: 'TYPE', payload: fullWord, speed: typeSpeed })\r\n      isType.current = true\r\n\r\n      if (text === fullWord) {\r\n        dispatch({ type: 'DELAY', payload: delaySpeed })\r\n        isType.current = false\r\n        isDelay.current = true\r\n\r\n        setTimeout(() => {\r\n          isDelay.current = false\r\n          isDelete.current = true\r\n        }, delaySpeed)\r\n\r\n        if (loop > 0) {\r\n          loops.current += 1\r\n          if (loops.current / words.length === loop) {\r\n            isDelay.current = false\r\n            isDone.current = true\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      dispatch({ type: 'DELETE', payload: fullWord, speed: deleteSpeed })\r\n      if (text === '') {\r\n        isDelete.current = false\r\n        dispatch({ type: 'COUNT' })\r\n      }\r\n    }\r\n\r\n    if (isType.current) {\r\n      if (onType) onType(loops.current)\r\n    }\r\n\r\n    if (isDelete.current) {\r\n      if (onDelete) onDelete()\r\n    }\r\n\r\n    if (isDelay.current) {\r\n      if (onDelay) onDelay()\r\n    }\r\n  }, [\r\n    count,\r\n    delaySpeed,\r\n    deleteSpeed,\r\n    loop,\r\n    typeSpeed,\r\n    words,\r\n    text,\r\n    onType,\r\n    onDelete,\r\n    onDelay\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const typing = setTimeout(handleTyping, speed)\r\n\r\n    if (isDone.current) clearTimeout(typing)\r\n\r\n    return () => clearTimeout(typing)\r\n  }, [handleTyping, speed])\r\n\r\n  useEffect(() => {\r\n    if (!onLoopDone) return\r\n\r\n    if (isDone.current) {\r\n      onLoopDone()\r\n    }\r\n  }, [onLoopDone])\r\n\r\n  return [\r\n    text,\r\n    {\r\n      isType: isType.current,\r\n      isDelay: isDelay.current,\r\n      isDelete: isDelete.current,\r\n      isDone: isDone.current\r\n    }\r\n  ]\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ReactNode, memo } from 'react'\r\nimport styles from '../styles.module.css'\r\n\r\nexport type CursorProps = {\r\n  /** Enable cursor blinking animation */\r\n  cursorBlinking?: boolean\r\n  /** Change cursor style */\r\n  cursorStyle?: ReactNode\r\n  /** Change cursor color */\r\n  cursorColor?: string\r\n}\r\n\r\nconst MemoizedCursor = ({\r\n  cursorBlinking = true,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit'\r\n}: CursorProps): JSX.Element => {\r\n  return (\r\n    <span\r\n      style={{ color: cursorColor }}\r\n      className={`${styles.blinkingCursor} ${\r\n        cursorBlinking ? styles.blinking : ''\r\n      }`}\r\n    >\r\n      {cursorStyle}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const Cursor = memo(MemoizedCursor)\r\n","import { TypewriterProps, useTypewriter } from '../hooks/useTypewriter'\r\nimport { Cursor, CursorProps } from './Cursor'\r\n\r\ntype ComponentProps = {\r\n  /** Show / Hide the cursor */\r\n  cursor?: boolean\r\n} & TypewriterProps &\r\n  CursorProps\r\n\r\n/**\r\n * A Simple React Component for adding a nice Typewriter effect to your project.\r\n */\r\nexport const Typewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  cursor = false,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit',\r\n  cursorBlinking = true,\r\n  onLoopDone,\r\n  onType,\r\n  onDelay,\r\n  onDelete\r\n}: ComponentProps): JSX.Element => {\r\n  const [text] = useTypewriter({\r\n    words,\r\n    loop,\r\n    typeSpeed,\r\n    deleteSpeed,\r\n    delaySpeed,\r\n    onLoopDone,\r\n    onType,\r\n    onDelay,\r\n    onDelete\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span>{text}</span>\r\n      {cursor && (\r\n        <Cursor\r\n          cursorStyle={cursorStyle}\r\n          cursorColor={cursorColor}\r\n          cursorBlinking={cursorBlinking}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":["Home","_ref","contactRef","_useState","useState","window","innerWidth","_useState2","_slicedToArray","windowWidth","setWindowWidth","scrollToContact","current","scrollIntoView","behavior","defaultOptions","loop","autoplay","animationData","Homeani","useEffect","handleResize","addEventListener","removeEventListener","data","_jsx","className","children","_jsxs","Lottie","options","style","width","height","Typewriter","words","cursor","cursorStyle","typeSpeed","deleteSpeed","delaySpeed","onClick","o","e","t","n","type","r","speed","text","payload","substring","length","count","i","s","u","l","c","d","a","p","y","onLoopDone","f","onType","v","onDelete","m","onDelay","h","useReducer","T","g","_","x","D","C","useRef","E","S","b","k","w","useCallback","setTimeout","clearTimeout","isType","isDelay","isDelete","isDone","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","cursorBlinking","cursorColor","jsx","color","concat","exports","jsxs","Fragment"],"sourceRoot":""}